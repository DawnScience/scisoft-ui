'''
Test data for the nextract script tests.

@author: voo82358
'''

usagedata = """Usage: nextract [OPTIONS]... FILE|DIRECORY [DATA_ELEMENTS]
OPTIONS:
  -gPATTERN, --glob=PATTERN  For a directory, limit the files selected to those
                               matching this pattern, default is "*.nxs"
  -h, --help                 Display full help, with examples & DATA_ELEMENTS
  -l, --list                 List details of data elements in the file(s)
  -n, --names                List the names of data elements in the file(s)
  -oPATH, --outpath=PATH     Sets the path for output file(s), "-" sends output
                               to stdout, default is "."
  -v, --verbose              Show additional progress information
  -d, --debug                Show debugging information
"""
usage2data = """
DATA_ELEMENTS:               These set the order of the data elements columns in
                               the output and limit processing to nexus files
                               containing these elements, default is "-"
  DATA_ELEMENT               Include a specific data element. If this element
                               has sub-elements, all will be included
  DATA_ELEMENT.SUB_ELEMENT   If a data element has sub elements (it has a dot in
                               it) then you can specify an individual sub
                               element. Any use of the full element will then
                               exclude the explicitly positioned sub element
  DATA_ELEMENT[INDEX]        If a data element is an array of values then you
                               can pull out specific indices and give them their
                               own column in the output
  -                          Include all data elements not explicitly listed

Examples:
  nextract -n -g*-?.nxs .    List the data elements of files in the current dir
                               which end with a dash, then any char, then ".nxs"
  nextract -ofubar /data     Extract data of all nexus files in "/data",
                               writing the ascii files to a sub-directory of
                               the current directory called "fubar"
  nextract . energy - ca21   For all nexus files in the current dir with data
                               elements named 'energy' and 'ca21', list all data
                               elements, with 'energy' first, 'ca' last and all
                               other data elements inbetween
  nextract . th mac119[0]    For all nexus files in the current dir with
                               data elements named 'th' and an array data
                               element named 'mac119', extract 'th' and the
                               first value (or sub array) in each 'mac119' array
"""

""" The key for testdata is a tuple (infile, (element,)) """
testdata = {} 
""" Sub keys include 'n' for names, 'l' for long names, 'd' for data,
    'f' for flattened data, 'w' for warnings set, 'wf' for warnings set
    during flattening and 'c' for comment (descrioption of the test). 

    Data files in the synthetic directory have special TestCases since
    they test specific scenarios.
""" 

  # -------ttest_data/Incomplete+i10-1972.nxs--------------------------
testdata[('test_data/Incomplete+i10-1972.nxs',())] = { 
    'n':'Incomplete+i10-1972.nxs: th, mac117',
    'nX':'Incom X plete+i10-1972.nxs: th, mac117',
    'l':'Incomplete+i10-1972.nxs: Scan dims: 1:[21]\n'
        '  Data names:           th,     mac117\n'
        '   Node type: NXpositioner  NXdetector\n'
        '   Data dims:        1:[3]   2:[ 3 32]\n'
        '   Data type:      float64     float64',
    'd':{'mac117': "array([[  8.10000000e+001,   6.19640486e+223,   5.73116149e-322,\n          2.42092166e-322,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   4.24399158e-314,   2.12199579e-314,\n          1.63041663e-322,   6.51664093e-315,   6.51921319e-315,\n          0.00000000e+000,   1.63041663e-322,               NaN,\n          0.00000000e+000,   4.94065646e-324,   1.63041663e-322,\n          1.35507324e+248,   1.08002811e-312,   0.00000000e+000,\n          1.63041663e-322,   0.00000000e+000,   5.54201479e+257,\n          9.65103871e-315,   1.63041663e-322,   6.52682773e-315,\n          6.46111384e-315,   6.47250691e-315,   7.95445690e-322,\n          6.45383439e-315,   0.00000000e+000],\n       [  8.10000000e+001,   6.19640486e+223,   2.31778599e-310,\n          1.63041663e-322,   9.88131292e-324,   1.08002811e-312,\n          1.58101007e-322,   1.63041663e-322,   2.31778645e-310,\n          4.94065646e-324,   6.57598703e-315,   7.16395186e-322,\n          6.45405242e-315,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   4.94065646e-322,   7.11454530e-322,\n          6.51722760e-315,   6.51094672e-315,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   9.48657265e-315,   2.44029516e-312,\n          0.00000000e+000,   0.00000000e+000,   1.63041663e-322,\n          2.31778645e-310,   4.94065646e-324],\n       [  8.10000000e+001,   2.31778599e-310,   2.31778599e-310,\n          3.21142670e-322,   6.53133401e-315,   6.53133401e-315,\n          6.53133440e-315,   6.53133895e-315,   2.21632049e-070,\n          4.90906054e-315,   3.16202013e-322,   1.58595072e-321,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779248e-310,\n          2.31779248e-310,   2.31779248e-310,   2.31779248e-310,\n          2.31779248e-310,   2.31779248e-310]])",
          'th': "array([ 4.00000236,  4.05000428,  4.09999644])"},
    'd1':{'mac117': "array([[  8.10000000e+001,   6.19640486e+223,   5.73116149e-322,\n          2.42092166e-322,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   4.24399158e-314,   2.12199579e-314,\n          1.63041663e-322,   6.51664093e-315,   6.51921319e-315,\n          0.00000000e+000,   1.63041663e-322,               NaN,\n          0.00000000e+000,   4.94065646e-324,   1.63041663e-322,\n          1.35507324e+248,   1.08002811e-312,   0.00000000e+000,\n          1.63041663e-322,   0.00000000e+000,   5.54201479e+257,\n          9.65103871e-315,   1.63041663e-322,   6.52682773e-315,\n          6.46111384e-315,   6.47250691e-315,   7.95445690e-322,\n          6.45383439e-315,   0.00000000e+000],\n       [  8.10000000e+001,   6.19640486e+223,   2.31778599e-310,\n          1.63041663e-322,   9.88131292e-324,   1.08002811e-312,\n          1.58101007e-322,   1.63041663e-322,   2.31778645e-310,\n          4.94065646e-324,   6.57598703e-315,   7.16395186e-322,\n          6.45405242e-315,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   4.94065646e-322,   7.11454530e-322,\n          6.51722760e-315,   6.51094672e-315,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   9.48657265e-315,   2.44029516e-312,\n          0.00000000e+000,   0.00000000e+000,   1.63041663e-322,\n          2.31778645e-310,   4.94065646e-324],\n       [  8.10000000e+001,   2.31778599e-310,   2.31778599e-310,\n          3.21142670e-322,   6.53133401e-315,   6.53133401e-315,\n          6.53133440e-315,   6.53133895e-315,   2.21632049e-070,\n          4.90906054e-315,   3.16202013e-322,   1.58595072e-321,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779248e-310,\n          2.31779248e-310,   2.31779248e-310,   2.31779248e-310,\n          2.31779248e-310,   2.31779248e-310]])",
          'th': "array([ 4.00000236,  4.05000428,  4.09999644])",
          'bob': "None"},
    'd2':{'mac117': "array([[  8.10000000e+001,   6.19640486e+223,   5.73116149e-322,\n          2.42092166e-322,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   4.24399158e-314,   2.12199579e-314,\n          1.63041663e-322,   6.51664093e-315,   6.51921319e-315,\n          0.00000000e+000,   1.63041663e-322,               NaN,\n          0.00000000e+000,   4.94065646e-324,   1.63041663e-322,\n          1.35507324e+248,   1.08002811e-312,   0.00000000e+000,\n          1.63041663e-322,   0.00000000e+000,   5.54201479e+257,\n          9.65103871e-315,   1.63041663e-322,   6.52682773e-315,\n          6.46111384e-315,   6.47250691e-315,   7.95445690e-322,\n          6.45383439e-315,   0.00000000e+000],\n       [  8.10000000e+001,   6.19640486e+223,   2.31778599e-310,\n          1.63041663e-322,   9.88131292e-324,   1.08002811e-312,\n          1.58101007e-322,   1.63041663e-322,   2.31778645e-310,\n          4.94065646e-324,   6.57598703e-315,   7.16395186e-322,\n          6.45405242e-315,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   4.94065646e-322,   7.11454530e-322,\n          6.51722760e-315,   6.51094672e-315,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   9.48657265e-315,   2.44029516e-312,\n          0.00000000e+000,   0.00000000e+000,   1.63041663e-322,\n          2.31778645e-310,   4.94065646e-324],\n       [  8.10000000e+001,   2.31778599e-310,   2.31778599e-310,\n          3.21142670e-322,   6.53133401e-315,   6.53133401e-315,\n          6.53133440e-315,   6.53133895e-315,   2.21632049e-070,\n          4.90906054e-315,   3.16202013e-322,   1.58595072e-321,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n          2.31779249e-310,   2.31779249e-310,   2.31779248e-310,\n          2.31779248e-310,   2.31779248e-310,   2.31779248e-310,\n          2.31779248e-310,   2.31779248e-310]])"
          },
    'f':{'mac117': "[array([  8.10000000e+001,   6.19640486e+223,   5.73116149e-322,\n         2.42092166e-322,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   4.24399158e-314,   2.12199579e-314,\n         1.63041663e-322,   6.51664093e-315,   6.51921319e-315,\n         0.00000000e+000,   1.63041663e-322,               NaN,\n         0.00000000e+000,   4.94065646e-324,   1.63041663e-322,\n         1.35507324e+248,   1.08002811e-312,   0.00000000e+000,\n         1.63041663e-322,   0.00000000e+000,   5.54201479e+257,\n         9.65103871e-315,   1.63041663e-322,   6.52682773e-315,\n         6.46111384e-315,   6.47250691e-315,   7.95445690e-322,\n         6.45383439e-315,   0.00000000e+000]), array([  8.10000000e+001,   6.19640486e+223,   2.31778599e-310,\n         1.63041663e-322,   9.88131292e-324,   1.08002811e-312,\n         1.58101007e-322,   1.63041663e-322,   2.31778645e-310,\n         4.94065646e-324,   6.57598703e-315,   7.16395186e-322,\n         6.45405242e-315,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   4.94065646e-322,   7.11454530e-322,\n         6.51722760e-315,   6.51094672e-315,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   9.48657265e-315,   2.44029516e-312,\n         0.00000000e+000,   0.00000000e+000,   1.63041663e-322,\n         2.31778645e-310,   4.94065646e-324]), array([  8.10000000e+001,   2.31778599e-310,   2.31778599e-310,\n         3.21142670e-322,   6.53133401e-315,   6.53133401e-315,\n         6.53133440e-315,   6.53133895e-315,   2.21632049e-070,\n         4.90906054e-315,   3.16202013e-322,   1.58595072e-321,\n         2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n         2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n         2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n         2.31779249e-310,   2.31779249e-310,   2.31779249e-310,\n         2.31779249e-310,   2.31779249e-310,   2.31779248e-310,\n         2.31779248e-310,   2.31779248e-310,   2.31779248e-310,\n         2.31779248e-310,   2.31779248e-310])]",
         'th': "[4.000002362, 4.0500042819999997, 4.0999964359999996]"},
    'w':set([]),
    'wf':set(['scan_dimensions inconsistent: 3 not 21 for scan th 4 5 0.05 mac117 1']),
    'c':'Test an incomplete dataset (an aborted scan) for warning'
} # -------test_data/NXdetectors-1d+i10-3.nxs--------------------------
testdata[('test_data/NXdetectors-1d+i10-3.nxs',())] = {
    'n':'NXdetectors-1d+i10-3.nxs: th, mac119',
    'l':'NXdetectors-1d+i10-3.nxs: Scan dims: 1:[2]\n'
        '  Data names:           th,     mac119\n'
        '   Node type: NXpositioner  NXdetector\n'
        '   Data dims:        1:[2]       1:[2]\n'
        '   Data type:      float64     float64',
    'd':{'mac119': "array([ 568.,  567.])",
         'th': "array([  8.66600000e-06,   9.99998236e-01])"},
    'f':{'mac119': "[568.0, 567.0]",
         'th': "[8.6659999999905146e-06, 0.99999823599999982]"},
    'w':set([]), 'wf':set([]),
    'c':'Basic test with a single positioner and detector.'
}
testdata[('test_data/NXdetectors-1d+i10-3.nxs',('mac119', '-'))] = { 
    'n':'NXdetectors-1d+i10-3.nxs: mac119, th',
    'l':'NXdetectors-1d+i10-3.nxs: Scan dims: 1:[2]\n'
        '  Data names:     mac119,           th\n'
        '   Node type: NXdetector  NXpositioner\n'
        '   Data dims:      1:[2]         1:[2]\n'
        '   Data type:    float64       float64',
    'd':testdata[('test_data/NXdetectors-1d+i10-3.nxs',())]['d'],
    'f':testdata[('test_data/NXdetectors-1d+i10-3.nxs',())]['f'],
    'w':set([]), 'wf':set([]),
    'c':'Basic test with all elements, specifying order.'
} # -------test_data/NXdetectors-1d+i20-4723.nxs-----------------------
testdata[('test_data/NXdetectors-1d+i20-4723.nxs',())] = {
    'n':'NXdetectors-1d+i20-4723.nxs: energy, counterTimer01.I0, counterTimer01.Iref, counterTimer01.It, counterTimer01.liveTime, counterTimer01.lnI0Iref, counterTimer01.lnI0It',
    'l':'NXdetectors-1d+i20-4723.nxs: Scan dims: 1:[11]\n'
        '  Data names:       energy, counterTimer01.I0, counterTimer01.Iref, counterTimer01.It, counterTimer01.liveTime, counterTimer01.lnI0Iref, counterTimer01.lnI0It\n'
        '   Node type: NXpositioner     NXdetector.SDS       NXdetector.SDS     NXdetector.SDS           NXdetector.SDS           NXdetector.SDS         NXdetector.SDS\n'
        '   Data dims:       1:[11]             1:[11]               1:[11]             1:[11]                   1:[11]                   1:[11]                 1:[11]\n'
        '   Data type:      float64            float64              float64            float64                  float64                  float64                float64',
    'd':{'counterTimer01.liveTime': "array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])",
         'counterTimer01.Iref': "array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])",
         'counterTimer01.lnI0It': "array([ NaN,  NaN,  NaN,  NaN,  NaN,  NaN,  NaN,  NaN,  NaN,  NaN,  NaN])",
         'energy': "array([ 3000.,  3001.,  3002.,  3003.,  3004.,  3005.,  3006.,  3007.,\n        3008.,  3009.,  3010.])",
         'counterTimer01.I0': "array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])",
         'counterTimer01.lnI0Iref': "array([ NaN,  NaN,  NaN,  NaN,  NaN,  NaN,  NaN,  NaN,  NaN,  NaN,  NaN])",
         'counterTimer01.It': "array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])"},
    'f':{'counterTimer01.liveTime': "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",
         'counterTimer01.Iref': "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",
         'counterTimer01.lnI0It': "[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]",
         'energy': "[3000.0, 3000.9999999999991, 3002.0, 3003.0, 3003.9999999999995, 3005.0, 3006.0, 3006.9999999999995, 3008.0, 3009.0, 3009.9999999999995]",
         'counterTimer01.I0': "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]",
         'counterTimer01.lnI0Iref': "[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]",
         'counterTimer01.It': "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"},
    'w':set([]), 'wf':set([]),
    'c':'Original testdata for nexus-convert. Tests extra name handling'
}
testdata[('test_data/NXdetectors-1d+i20-4723.nxs',('counterTimer01.I0',))] = {
    'n':'NXdetectors-1d+i20-4723.nxs: counterTimer01.I0',
    'l':'NXdetectors-1d+i20-4723.nxs: Scan dims: 1:[11]\n'
        '  Data names: counterTimer01.I0\n'
        '   Node type:    NXdetector.SDS\n'
        '   Data dims:            1:[11]\n'
        '   Data type:           float64',
    'd':testdata[('test_data/NXdetectors-1d+i20-4723.nxs',())]['d'],
    'f':testdata[('test_data/NXdetectors-1d+i20-4723.nxs',())]['f'],
    'w':set([]), 'wf':set([]),
    'c':'Test extra name handling with single column extract'
}
testdata[('test_data/NXdetectors-1d+i20-4723.nxs',('counterTimer01.Iref', 'counterTimer01', 'counterTimer01.liveTime'))] = {
    'n':'NXdetectors-1d+i20-4723.nxs: counterTimer01.Iref, counterTimer01.I0, counterTimer01.It, counterTimer01.lnI0Iref, counterTimer01.lnI0It, counterTimer01.liveTime',
    'l':'NXdetectors-1d+i20-4723.nxs: Scan dims: 1:[11]\n'
        '  Data names: counterTimer01.Iref, counterTimer01.I0, counterTimer01.It, counterTimer01.lnI0Iref, counterTimer01.lnI0It, counterTimer01.liveTime\n'
        '   Node type:      NXdetector.SDS     NXdetector.SDS     NXdetector.SDS           NXdetector.SDS         NXdetector.SDS           NXdetector.SDS\n'
        '   Data dims:              1:[11]             1:[11]             1:[11]                   1:[11]                 1:[11]                   1:[11]\n'
        '   Data type:             float64            float64            float64                  float64                float64                  float64',
    'd':testdata[('test_data/NXdetectors-1d+i20-4723.nxs',())]['d'],
    'f':testdata[('test_data/NXdetectors-1d+i20-4723.nxs',())]['f'],
    'w':set([]), 'wf':set([]),
    'c':'Test mix of specific and wildcard extraname excluding energy'
}
testdata[('test_data/NXdetectors-1d+i20-4723.nxs',('counterTimer01.Iref', '-', 'counterTimer01', 'counterTimer01.liveTime'))] = {
    'n':'NXdetectors-1d+i20-4723.nxs: counterTimer01.Iref, energy, counterTimer01.I0, counterTimer01.It, counterTimer01.lnI0Iref, counterTimer01.lnI0It, counterTimer01.liveTime',
    'l':'NXdetectors-1d+i20-4723.nxs: Scan dims: 1:[11]\n'
        '  Data names: counterTimer01.Iref,       energy, counterTimer01.I0, counterTimer01.It, counterTimer01.lnI0Iref, counterTimer01.lnI0It, counterTimer01.liveTime\n'
        '   Node type:      NXdetector.SDS  NXpositioner     NXdetector.SDS     NXdetector.SDS           NXdetector.SDS         NXdetector.SDS           NXdetector.SDS\n'
        '   Data dims:              1:[11]        1:[11]             1:[11]             1:[11]                   1:[11]                 1:[11]                   1:[11]\n'
        '   Data type:             float64       float64            float64            float64                  float64                float64                  float64',
    'd':testdata[('test_data/NXdetectors-1d+i20-4723.nxs',())]['d'],
    'f':testdata[('test_data/NXdetectors-1d+i20-4723.nxs',())]['f'],
    'w':set([]), 'wf':set([]),
    'c':'Test mixture of specific, wildcard extraname and remaining'
} # -------test_data/NXdetectors-2d(2x1)+i10-2.nxs---------------------
testdata[('test_data/NXdetectors-2d(2x1)+i10-2.nxs',())] = {
    'n':'NXdetectors-2d(2x1)+i10-2.nxs: th, mac119',
    'l':'NXdetectors-2d(2x1)+i10-2.nxs: Scan dims: 1:[2]\n'
        '  Data names:           th,     mac119\n'
        '   Node type: NXpositioner  NXdetector\n'
        '   Data dims:        1:[2]     2:[2 1]\n'
        '   Data type:      float64     float64',
    'd':{'mac119': "array([[ 569.],\n       [ 555.]])",
         'th': "array([ -1.10000000e-06,   9.99998236e-01])"},
    'f':{'mac119': "[array([ 569.]), array([ 555.])]",
         'th': "[-1.1000000000316312e-06, 0.99999823599999982]"},
    'w':set([]), 'wf':set([]),
    'c':'Test a 2d scan with a detector that returns an 1 wide array'
}
testdata[('test_data/NXdetectors-2d(2x1)+i10-2.nxs',('-', 'mac119[0]'))] = {
    'n':'NXdetectors-2d(2x1)+i10-2.nxs: th, mac119[0]',
    'l':'NXdetectors-2d(2x1)+i10-2.nxs: Scan dims: 1:[2]\n'
        '  Data names:           th,  mac119[0]\n'
        '   Node type: NXpositioner  NXdetector\n'
        '   Data dims:        1:[2]     2:[2 1]\n'
        '   Data type:      float64     float64',
    'd':{'mac119': "array([[ 569.],\n       [ 555.]])",
         'th': "array([ -1.10000000e-06,   9.99998236e-01])",
         'mac119[0]': "array([[ 569.],\n       [ 555.]])"},
    'f':{'mac119': "[array([ 569.]), array([ 555.])]",
         'th': "[-1.1000000000316312e-06, 0.99999823599999982]",
         'mac119[0]': "[569.0, 555.0]"},
    'w':set([]), 'wf':set([]),
    'c':'Test slicing out the single element from the 1d wide array'
} # -------test_data/NXdetectors-2d(2x32)+i10-1.nxs--------------------
testdata[('test_data/NXdetectors-2d(2x32)+i10-1.nxs',())] = {
    'n':'NXdetectors-2d(2x32)+i10-1.nxs: th, mac119',
    'l':'NXdetectors-2d(2x32)+i10-1.nxs: Scan dims: 1:[2]\n'
        '  Data names:           th,     mac119\n'
        '   Node type: NXpositioner  NXdetector\n'
        '   Data dims:        1:[2]   2:[ 2 32]\n'
        '   Data type:      float64     float64',
    'd':{'mac119': "array([[  5.49000000e+002,   6.19640486e+223,   5.73116149e-322,\n          1.63041663e-322,   6.32299661e-310,   1.08002811e-312,\n          0.00000000e+000,   1.66500123e-321,   4.94065646e-324,\n          1.58101007e-322,   9.88131292e-324,   2.31795009e-310,\n          2.31795009e-310,   2.31796062e-310,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000],\n       [  5.38000000e+002,   6.19640486e+223,   5.73116149e-322,\n          1.82804289e-322,   6.79038653e-313,   2.31795547e-310,\n          0.00000000e+000,   4.00193173e-322,   2.31795547e-310,\n          2.31795547e-310,   0.00000000e+000,   0.00000000e+000,\n          2.31795603e-310,   1.63041663e-322,   2.31795547e-310,\n          2.31795547e-310,   3.95252517e-322,   1.61836143e-319,\n          2.31795617e-310,   1.61697805e-319,   2.31795561e-310,\n          2.31795619e-310,   2.31795561e-310,   2.31795619e-310,\n          2.54639495e-313,   0.00000000e+000,   6.42285340e-323,\n          5.92878775e-323,   2.47032823e-323,   1.97626258e-323,\n          2.22510993e-308,  -8.02989137e+286]])",
         'th': "array([ -1.10000000e-06,   9.99998236e-01])"},
    'f':{'mac119': "[array([  5.49000000e+002,   6.19640486e+223,   5.73116149e-322,\n         1.63041663e-322,   6.32299661e-310,   1.08002811e-312,\n         0.00000000e+000,   1.66500123e-321,   4.94065646e-324,\n         1.58101007e-322,   9.88131292e-324,   2.31795009e-310,\n         2.31795009e-310,   2.31796062e-310,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000]), array([  5.38000000e+002,   6.19640486e+223,   5.73116149e-322,\n         1.82804289e-322,   6.79038653e-313,   2.31795547e-310,\n         0.00000000e+000,   4.00193173e-322,   2.31795547e-310,\n         2.31795547e-310,   0.00000000e+000,   0.00000000e+000,\n         2.31795603e-310,   1.63041663e-322,   2.31795547e-310,\n         2.31795547e-310,   3.95252517e-322,   1.61836143e-319,\n         2.31795617e-310,   1.61697805e-319,   2.31795561e-310,\n         2.31795619e-310,   2.31795561e-310,   2.31795619e-310,\n         2.54639495e-313,   0.00000000e+000,   6.42285340e-323,\n         5.92878775e-323,   2.47032823e-323,   1.97626258e-323,\n         2.22510993e-308,  -8.02989137e+286])]",
         'th': "[-1.1000000000316312e-06, 0.99999823599999982]"},
    'w':set([]), 'wf':set([]),
    'c':'Test a 2d scan with a detector that returns an 32 wide array'
}
testdata[('test_data/NXdetectors-2d(2x32)+i10-1.nxs',('-', 'mac119[0]', 'mac119[7]'))] = {
    'n':'NXdetectors-2d(2x32)+i10-1.nxs: th, mac119[0], mac119[7]',
    'l':'NXdetectors-2d(2x32)+i10-1.nxs: Scan dims: 1:[2]\n'
        '  Data names:           th,  mac119[0],  mac119[7]\n'
        '   Node type: NXpositioner  NXdetector  NXdetector\n'
        '   Data dims:        1:[2]   2:[ 2 32]   2:[ 2 32]\n'
        '   Data type:      float64     float64     float64',
    'd':{'mac119': "array([[  5.49000000e+002,   6.19640486e+223,   5.73116149e-322,\n          1.63041663e-322,   6.32299661e-310,   1.08002811e-312,\n          0.00000000e+000,   1.66500123e-321,   4.94065646e-324,\n          1.58101007e-322,   9.88131292e-324,   2.31795009e-310,\n          2.31795009e-310,   2.31796062e-310,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000],\n       [  5.38000000e+002,   6.19640486e+223,   5.73116149e-322,\n          1.82804289e-322,   6.79038653e-313,   2.31795547e-310,\n          0.00000000e+000,   4.00193173e-322,   2.31795547e-310,\n          2.31795547e-310,   0.00000000e+000,   0.00000000e+000,\n          2.31795603e-310,   1.63041663e-322,   2.31795547e-310,\n          2.31795547e-310,   3.95252517e-322,   1.61836143e-319,\n          2.31795617e-310,   1.61697805e-319,   2.31795561e-310,\n          2.31795619e-310,   2.31795561e-310,   2.31795619e-310,\n          2.54639495e-313,   0.00000000e+000,   6.42285340e-323,\n          5.92878775e-323,   2.47032823e-323,   1.97626258e-323,\n          2.22510993e-308,  -8.02989137e+286]])",
         'th': "array([ -1.10000000e-06,   9.99998236e-01])",
         'mac119[0]': "array([[  5.49000000e+002,   6.19640486e+223,   5.73116149e-322,\n          1.63041663e-322,   6.32299661e-310,   1.08002811e-312,\n          0.00000000e+000,   1.66500123e-321,   4.94065646e-324,\n          1.58101007e-322,   9.88131292e-324,   2.31795009e-310,\n          2.31795009e-310,   2.31796062e-310,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000],\n       [  5.38000000e+002,   6.19640486e+223,   5.73116149e-322,\n          1.82804289e-322,   6.79038653e-313,   2.31795547e-310,\n          0.00000000e+000,   4.00193173e-322,   2.31795547e-310,\n          2.31795547e-310,   0.00000000e+000,   0.00000000e+000,\n          2.31795603e-310,   1.63041663e-322,   2.31795547e-310,\n          2.31795547e-310,   3.95252517e-322,   1.61836143e-319,\n          2.31795617e-310,   1.61697805e-319,   2.31795561e-310,\n          2.31795619e-310,   2.31795561e-310,   2.31795619e-310,\n          2.54639495e-313,   0.00000000e+000,   6.42285340e-323,\n          5.92878775e-323,   2.47032823e-323,   1.97626258e-323,\n          2.22510993e-308,  -8.02989137e+286]])",
         'mac119[7]': "array([[  5.49000000e+002,   6.19640486e+223,   5.73116149e-322,\n          1.63041663e-322,   6.32299661e-310,   1.08002811e-312,\n          0.00000000e+000,   1.66500123e-321,   4.94065646e-324,\n          1.58101007e-322,   9.88131292e-324,   2.31795009e-310,\n          2.31795009e-310,   2.31796062e-310,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n          0.00000000e+000,   0.00000000e+000],\n       [  5.38000000e+002,   6.19640486e+223,   5.73116149e-322,\n          1.82804289e-322,   6.79038653e-313,   2.31795547e-310,\n          0.00000000e+000,   4.00193173e-322,   2.31795547e-310,\n          2.31795547e-310,   0.00000000e+000,   0.00000000e+000,\n          2.31795603e-310,   1.63041663e-322,   2.31795547e-310,\n          2.31795547e-310,   3.95252517e-322,   1.61836143e-319,\n          2.31795617e-310,   1.61697805e-319,   2.31795561e-310,\n          2.31795619e-310,   2.31795561e-310,   2.31795619e-310,\n          2.54639495e-313,   0.00000000e+000,   6.42285340e-323,\n          5.92878775e-323,   2.47032823e-323,   1.97626258e-323,\n          2.22510993e-308,  -8.02989137e+286]])"},
    'f':{'mac119': "[array([  5.49000000e+002,   6.19640486e+223,   5.73116149e-322,\n         1.63041663e-322,   6.32299661e-310,   1.08002811e-312,\n         0.00000000e+000,   1.66500123e-321,   4.94065646e-324,\n         1.58101007e-322,   9.88131292e-324,   2.31795009e-310,\n         2.31795009e-310,   2.31796062e-310,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,\n         0.00000000e+000,   0.00000000e+000]), array([  5.38000000e+002,   6.19640486e+223,   5.73116149e-322,\n         1.82804289e-322,   6.79038653e-313,   2.31795547e-310,\n         0.00000000e+000,   4.00193173e-322,   2.31795547e-310,\n         2.31795547e-310,   0.00000000e+000,   0.00000000e+000,\n         2.31795603e-310,   1.63041663e-322,   2.31795547e-310,\n         2.31795547e-310,   3.95252517e-322,   1.61836143e-319,\n         2.31795617e-310,   1.61697805e-319,   2.31795561e-310,\n         2.31795619e-310,   2.31795561e-310,   2.31795619e-310,\n         2.54639495e-313,   0.00000000e+000,   6.42285340e-323,\n         5.92878775e-323,   2.47032823e-323,   1.97626258e-323,\n         2.22510993e-308,  -8.02989137e+286])]",
         'th': "[-1.1000000000316312e-06, 0.99999823599999982]",
         'mac119[0]': "[549.0, 538.0]",
         'mac119[7]': "[1.6650012264850009e-321, 4.001931731314097e-322]"},
    'w':set([]), 'wf':set([]),
    'c':'Test a 2d scan with a detector that returns an 32 wide array'
} # -------test_data/NXpositioners-1d.nxs------------------------------
testdata[('test_data/NXpositioners-1d.nxs',())] = {
    'n':'NXpositioners-1d.nxs: th, th_enc, tth_enc',
    'l':'NXpositioners-1d.nxs: Scan dims: 1:[3]\n'
        '  Data names:           th,       th_enc,      tth_enc\n'
        '   Node type: NXpositioner  NXpositioner  NXpositioner\n'
        '   Data dims:        1:[3]         1:[3]         1:[3]\n'
        '   Data type:      float64       float64       float64',
    'd':{'th_enc': "array([-2.99277778, -1.90472222, -0.90666667])",
         'th': "array([-2.99999911, -1.99999977, -1.00000044])",
         'tth_enc': "array([-0.94805563, -0.94333341, -0.94305563])"},
    'f':{'th_enc': "[-2.9927777801719997, -1.904722223746, -0.90666666739199986]",
         'tth_enc': "[-0.9480556283139947, -0.94333340608798721, -0.94305562830999168]",
         'th': "[-2.9999991079999999, -1.999999772, -1.0000004360000001]"},
    'w':set([]), 'wf':set([]),
    'c':'Test a 1d scan, positioners only'
} # -------test_data/NXpositioners-1d.nxs------------------------------
testdata[('test_data/NXpositioners-1d.nxs',('th_enc', '-', 'tth_enc'))] = {
    'n':'NXpositioners-1d.nxs: th_enc, th, tth_enc',
    'l':'NXpositioners-1d.nxs: Scan dims: 1:[3]\n'
        '  Data names:       th_enc,           th,      tth_enc\n'
        '   Node type: NXpositioner  NXpositioner  NXpositioner\n'
        '   Data dims:        1:[3]         1:[3]         1:[3]\n'
        '   Data type:      float64       float64       float64',
    'd':testdata[('test_data/NXpositioners-1d.nxs',())]['d'],
    'f':testdata[('test_data/NXpositioners-1d.nxs',())]['f'],
    'w':set([]), 'wf':set([]),
    'c':'Test a 1d scan, positioners only, specifying first, last and rest'
} # -------test_data/NXpositioners-2d.nxs------------------------------
testdata[('test_data/NXpositioners-2d.nxs',())] = {
    'n':'NXpositioners-2d.nxs: th, th_enc, tth, tth_enc',
    'l':'NXpositioners-2d.nxs: Scan dims: 2:[3 3]\n'
        '  Data names:           th,       th_enc,          tth,      tth_enc\n'
        '   Node type: NXpositioner  NXpositioner  NXpositioner  NXpositioner\n'
        '   Data dims:      2:[3 3]       2:[3 3]       2:[3 3]       2:[3 3]\n'
        '   Data type:      float64       float64       float64       float64',
    'd':{'tth': "array([[ -1.99999474e+00,  -9.99995400e-01,   3.93600000e-06],\n       [ -1.99999474e+00,  -9.99995400e-01,   3.93600000e-06],\n       [ -1.99999474e+00,  -9.99995400e-01,   3.93600000e-06]])",
         'th_enc': "array([[-1.90222222, -1.89722222, -1.8975    ],\n       [-0.90222222, -0.8975    , -0.8975    ],\n       [ 0.09777778,  0.10194444,  0.1025    ]])",
         'th': "array([[ -1.99999977e+00,  -1.99999977e+00,  -1.99999977e+00],\n       [ -1.00000044e+00,  -1.00000044e+00,  -1.00000044e+00],\n       [ -1.10000000e-06,  -1.10000000e-06,  -1.10000000e-06]])", 
         'tth_enc': "array([[-3.01555563, -1.95805563, -0.96138896],\n       [-3.0172223 , -1.95694452, -0.95972229],\n       [-3.01750007, -1.94777785, -0.95472229]])"},
    'f':{'tth': "[-1.999994736000005, -0.99999540000000309, 3.9359999988164418e-06, -1.999994736000005, -0.99999540000000309, 3.9359999988164418e-06, -1.999994736000005, -0.99999540000000309, 3.9359999988164418e-06]",
         'th_enc': "[-1.9022222237439999, -1.8972222237399998, -1.8975000015180001, -0.9022222229439999, -0.89750000071799996, -0.89750000071799996, 0.097777777855999989, 0.10194444452599999, 0.10250000008199998]",
         'tth_enc': "[-3.0155556299679915, -1.9580556291219864, -0.96138896165798837, -3.0172222966359925, -1.9569445180099907, -0.9597222949899874, -3.0175000744139879, -1.9477778513359854, -0.9547222949859987]",
         'th': "[-1.999999772, -1.999999772, -1.999999772, -1.0000004360000001, -1.0000004360000001, -1.0000004360000001, -1.1000000000316312e-06, -1.1000000000316312e-06, -1.1000000000316312e-06]"},
    'w':set([]), 'wf':set([]),
    'c':'Test a 2d scan, positioners only'
} # -------test_data/NXpositioners-3d.nxs------------------------------
testdata[('test_data/NXpositioners-3d.nxs',())] = {
    'n':'NXpositioners-3d.nxs: test, th, th_enc, tth, tth_enc',
    'l':'NXpositioners-3d.nxs: Scan dims: 3:[3 3 3]\n'
        '  Data names:         test,           th,       th_enc,          tth,      tth_enc\n'
        '   Node type: NXpositioner  NXpositioner  NXpositioner  NXpositioner  NXpositioner\n'
        '   Data dims:    3:[3 3 3]     3:[3 3 3]     3:[3 3 3]     3:[3 3 3]     3:[3 3 3]\n'
        '   Data type:      float64       float64       float64       float64       float64',
    'd':{'test': "array([[[-1., -1., -1.],\n        [-1., -1., -1.],\n        [-1., -1., -1.]],\n\n       [[ 0.,  0.,  0.],\n        [ 0.,  0.,  0.],\n        [ 0.,  0.,  0.]],\n\n       [[ 1.,  1.,  1.],\n        [ 1.,  1.,  1.],\n        [ 1.,  1.,  1.]]])",
         'tth': "array([[[ -9.99995400e-01,   3.93600000e-06,   1.00000327e+00],\n        [ -9.99995400e-01,   3.93600000e-06,   1.00000327e+00],\n        [ -9.99995400e-01,   3.93600000e-06,   1.00000327e+00]],\n\n       [[ -9.99995400e-01,   3.93600000e-06,   1.00000327e+00],\n        [ -9.99995400e-01,   3.93600000e-06,   1.00000327e+00],\n        [ -9.99995400e-01,   3.93600000e-06,   1.00000327e+00]],\n\n       [[ -9.99995400e-01,   3.93600000e-06,   1.00000327e+00],\n        [ -9.99995400e-01,   3.93600000e-06,   1.00000327e+00],\n        [ -9.99995400e-01,   3.93600000e-06,   1.00000327e+00]]])",
         'th_enc': "array([[[-3.9025    , -3.89722223, -3.89777778],\n        [-2.9025    , -2.8975    , -2.8975    ],\n        [-1.9025    , -1.89722222, -1.8975    ]],\n\n       [[-3.90222223, -3.8975    , -3.8975    ],\n        [-2.9025    , -2.8975    , -2.8975    ],\n        [-1.9025    , -1.89777778, -1.89777778]],\n\n       [[-3.9025    , -3.89722223, -3.8975    ],\n        [-2.9025    , -2.89777778, -2.89777778],\n        [-1.90277778, -1.89722222, -1.89777778]]])",
         'th': "array([[[-3.99999844, -3.99999844, -3.99999844],\n        [-2.99999911, -2.99999911, -2.99999911],\n        [-1.99999977, -1.99999977, -1.99999977]],\n\n       [[-3.99999844, -3.99999844, -3.99999844],\n        [-2.99999911, -2.99999911, -2.99999911],\n        [-1.99999977, -1.99999977, -1.99999977]],\n\n       [[-3.99999844, -3.99999844, -3.99999844],\n        [-2.99999911, -2.99999911, -2.99999911],\n        [-1.99999977, -1.99999977, -1.99999977]]])",
         'tth_enc': "array([[[-2.0172223 , -0.96083341,  0.04055548],\n        [-2.01805563, -0.96000007,  0.04027771],\n        [-2.01805563, -0.96055563,  0.03999993]],\n\n       [[-2.01777785, -0.95805563,  0.03888882],\n        [-2.01750007, -0.96222229,  0.03944437],\n        [-2.01777785, -0.95333341,  0.04138882]],\n\n       [[-2.01750007, -0.95888896,  0.03833326],\n        [-2.01750007, -0.95388896,  0.04277771],\n        [-2.0172223 , -0.95972229,  0.04416659]]])"},
    'f':{'test': "[-1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]",
         'tth': "[-0.99999540000000309, 3.9359999988164418e-06, 1.0000032720000007, -0.99999540000000309, 3.9359999988164418e-06, 1.0000032720000007, -0.99999540000000309, 3.9359999988164418e-06, 1.0000032720000007, -0.99999540000000309, 3.9359999988164418e-06, 1.0000032720000007, -0.99999540000000309, 3.9359999988164418e-06, 1.0000032720000007, -0.99999540000000309, 3.9359999988164418e-06, 1.0000032720000007, -0.99999540000000309, 3.9359999988164418e-06, 1.0000032720000007, -0.99999540000000309, 3.9359999988164418e-06, 1.0000032720000007, -0.99999540000000309, 3.9359999988164418e-06, 1.0000032720000007]",
         'th_enc': "[-3.9025000031219998, -3.8972222253400002, -3.8977777808959999, -2.9025000023219998, -2.8975000023179995, -2.8975000023179995, -1.9025000015219997, -1.8972222237399998, -1.8975000015180001, -3.9022222253439995, -3.8975000031179996, -3.8975000031179996, -2.9025000023219998, -2.8975000023179995, -2.8975000023179995, -1.9025000015219997, -1.897777779296, -1.897777779296, -3.9025000031219998, -3.8972222253400002, -3.8975000031179996, -2.9025000023219998, -2.8977777800959998, -2.8977777800959998, -1.9027777793, -1.8972222237399998, -1.897777779296]",
         'tth_enc': "[-2.0172222958359924, -0.96083340610199741, 0.040555483588008201, -2.0180556291699934, -0.96000007276799693, 0.040277705810012776, -2.0180556291699934, -0.96055562832398789, 0.03999992803200314, -2.0177778513919975, -0.95805562832198621, 0.03888881692000723, -2.0175000736139879, -0.96222229499198875, 0.03944437247601229, -2.0177778513919975, -0.95333340609599304, 0.041388816922008687, -2.0175000736139879, -0.95888896165598692, 0.038333261364002169, -2.0175000736139879, -0.95388896165199821, 0.042777705812014233, -2.0172222958359924, -0.9597222949899874, 0.044166594702005568]",
         'th': "[-3.9999984439999996, -3.9999984439999996, -3.9999984439999996, -2.9999991079999999, -2.9999991079999999, -2.9999991079999999, -1.999999772, -1.999999772, -1.999999772, -3.9999984439999996, -3.9999984439999996, -3.9999984439999996, -2.9999991079999999, -2.9999991079999999, -2.9999991079999999, -1.999999772, -1.999999772, -1.999999772, -3.9999984439999996, -3.9999984439999996, -3.9999984439999996, -2.9999991079999999, -2.9999991079999999, -2.9999991079999999, -1.999999772, -1.999999772, -1.999999772]"},
    'w':set([]), 'wf':set([]),
    'c':'Test a 3d scan, positioners only'
} # -------test_data/OneElementScan+i10-1010.nxs-----------------------
testdata[('test_data/OneElementScan+i10-1010.nxs', ())] = {
    'n':'OneElementScan+i10-1010.nxs: ca34, idupgm_energy',
    'l':'OneElementScan+i10-1010.nxs: Scan dims: 1:[3171]\n'
        '  Data names:         ca34, idupgm_energy\n'
        '   Node type: NXpositioner   NXpositioner\n'
        '   Data dims:        1:[1]          1:[1]\n'
        '   Data type:      float64        float64',
    'd':{'ca34':'-0.055246930542682218', 'idupgm_energy':'779.99233692255291'},
    'f':{'ca34':'[-0.055246930542682218]', 'idupgm_energy':'[779.99233692255291]'},
    'w':set(['no data elements with more than one value, returning all single value elements']),
    'wf':set([]),
    'c':'Test a dataset with only one scan data point'
} # -------------------------------------------------------------------
tests = (v for v in testdata.iterkeys())
