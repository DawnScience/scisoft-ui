<project name="plugin-uk.ac.diamond.scisoft.analysis.rcp.test" basedir=".">

	<dirname property="plugin.basedir" file="${ant.file}" />
	<pathconvert property="workspace.loc" setonempty="false">
		<regexpmapper from="(.*)_git/.+" to="\1"/>
		<path><pathelement location="${plugin.basedir}" /></path>
	</pathconvert>
	<fail message="ERROR: Could not determine workspace.loc" unless="workspace.loc" />
	<property name="workspace.git.loc" value="${workspace.loc}_git" />
	<import file="${workspace.git.loc}/diamond-releng.git/diamond.releng.tools/ant-headless/common.ant" />

	<!-- ====================================================================
		   JUnit tests
		 ==================================================================== -->

	<import file="${workspace.git.loc}/diamond-releng.git/diamond.releng.tools/ant-headless/test-common.ant" />
    <target name="junit-tests" depends="set-test-base-DAWN">
        <property name="uk.ac.diamond.jython.location" value="${workspace.git.loc}/diamond-jython.git/uk.ac.diamond.jython" />  <!-- required by JythonInterpreterUtils in uk.ac.diamond.scisoft.analysis.rcp -->
        <junit-call description="${ant.project.name} Java JUnit tests" maxmemory="1024m">
            <formatter type="xml" />
            <classpath>
                <pathelement location="${junitjar.loc}" />
                <pathelement location="${jythonjar.loc}" />
                <pathelement location="${plugin.basedir}/bin" />
                <pathelement location="${workspace.git.loc}/gda-common.git/uk.ac.diamond.test.runners/logging" />  <!-- to pick up logback-test.xml -->
                <pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.analysis.api/bin" />
                <pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.analysis/bin" />
                <pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.analysis/jars/*" />
                <pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.analysis.dataset/bin" />
                <pathelement location="${workspace.git.loc}/scisoft-ui.git/uk.ac.diamond.scisoft.analysis.rcp/bin" />
                <pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.analysis.plotserver/bin" />
                <pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.analysis.xmlrpc/bin" />
                <pathelement location="${workspace.git.loc}/gda-common.git/uk.ac.gda.common/bin" />
                <pathelement location="${workspace.git.loc}/dawn-ui.git/org.dawnsci.common.widgets/bin" />
                <pathelement location="${workspace.git.loc}/dawn-common.git/org.dawb.common.ui/bin" />
                <pathelement location="${workspace.git.loc}/dawn-common.git/org.dawb.common.util/bin" />
                <pathelement location="${workspace.git.loc}/dawn-ui.git/org.dawnsci.plotting.jreality/bin" />
                <pathelement location="${workspace.git.loc}/scisoft-core.git/uk.ac.diamond.scisoft.python/bin" />
                <pathelement location="${workspace.git.loc}/scisoft-cbflib.git/uk.ac.diamond.CBFlib/bin" />
                <pathelement location="${workspace.git.loc}/scisoft-cbflib.git/uk.ac.diamond.CBFlib/jars/*" />
                <pathelement location="${workspace.git.loc}/dawn-third.git/ncsa.hdf/bin" />
                <pathelement location="${workspace.git.loc}/dawn-third.git/ncsa.hdf/jars/*" />
                <path refid="tp.slf4j.path" />  <!--ensure that required org.slf4j.LoggerFactory appears first in classpath -->
                <path refid="tp.jcl-over-slf4j.path" />  <!--ensure that matching imp appears first in classpath -->
                <pathelement location="${workspace.loc}/tp/plugins/*" />
            </classpath>
            <batchtest todir="@{report.dir}">
                <fileset dir="${plugin.basedir}/src">
                    <include name="**/*Test.java" />
                    <exclude name="**/*PluginTest.java" />
                </fileset>
            </batchtest>
        </junit-call>
    </target>

</project>
